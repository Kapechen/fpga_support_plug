"use strict";
const fs = require("fs");
const fspath = require("path");

export function mkdir(path) {
    if (fs.existsSync(path)) {
      return true;
    } else { 
        if (mkdir(fspath.dirname(path))) {
            fs.mkdirSync(path);
        }
        return true;
    }
}

export function deleteDir(path){
    let files = [];
    if( fs.existsSync(path) ) {  
        files = fs.readdirSync(path);   
        files.forEach(element => {
            let curPath = fspath.join(path,element).replace(/\\/g,"\/");
            if(fs.statSync(curPath).isDirectory()) { 
                deleteDir(curPath);
            } else {    
                fs.unlinkSync(curPath);    
            }
        });
        fs.rmdirSync(path); //清除文件夹
    }
}

export function movedir(oldpath,newpath) {
    if (oldpath != newpath) {        
        let folder  = fspath.basename(oldpath);
        newpath = newpath + '/' + folder;
        if (fs.existsSync(oldpath)) {
            if (fs.existsSync(newpath)) {
                deleteDir(newpath);
            }
            fs.renameSync(oldpath,newpath);
        }else{
            mkdir(newpath);	
        }
    }
}

export function copydir(srcPath, tarPath, filter = []) {
    fs.readdir(srcPath, function (err, files) {
        if (err === null) {
            files.forEach(function (filename) {
                let filedir = fspath.join(srcPath,filename);
                let filterFlag = filter.some(item => item === filename)
                if (!filterFlag) {
                    fs.stat(filedir, function (errs, stats) {
                        let isFile = stats.isFile()
                        if (isFile) {                               
                            const destPath = fspath.join(tarPath,filename);
                            fs.copyFile(filedir, destPath, (err) =>  { })
                        } else {                                       
                            let tarFiledir = fspath.join(tarPath,filename);
                            fs.mkdir(tarFiledir,(err) =>  { });
                            copydir(filedir, tarFiledir, filter)            
                        }
                    })
                }
            })
        } else {
            if (err) console.error(err);
        }
    })
}

export function readFolder(path) {
    return fs.readdirSync(path);
}
